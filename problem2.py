import numpy as np

CIPHERTEXT = "02 17 24 00 08 29 10 08 25 09 17 06 26 01 17 25 29 22 14 16 19 06 25 15 00 01 22 04 09 11 20 23 13 26 04 20 02 31 00 01 18 13 00 18 17 01 20 01 30 22 16 25 19 24 01 14 11 13 03 19 10 18 15 08 19 13 04 20 01 28 17 00 27 08 30 18 24 01 04 10 24 22 10 11 24 05 10 13 21 29 01 03 09 16 07 29 29 28 07 05 05 29 20 01 17 08 30 17 10 29 30 03 28 29 00 01 03 25 10 18 21 28 00 05 14 16 03 06 08 22 13 12 31 19 06 14 19 19 13 19 27 03 31 18 04 22 27 05 27 24 30 00 25 27 06 18 16 25 02 14 19 10 07 10 27 28 00 10 26 05 22 07 17 05 14 14 05 09 08 02 02 05 16 07 05 09 06 22 05 06 02 13 30 25 28 00 06 27 03 10 04 26 16 18 20 24 30 13 03 22 13 11 21 03 18 15 05 16 19 17 13 10 15 08 18 06 16 00 02 27 18 16 28 30 19 10 04 14 04 23 30 22 12 02 29 28 20 02 21 13 01 08 14 16 27 14 28 13 19 17 02 02 19 16 04 06 03 17 25 11 30 13 23 02 19 17 21 03 01 21 21 11 01 02 01 19 02 14 28 13 12 20 19 23 29 06 06 24 16 25 30 09 19 10 26 18 02 31 11 07 27 15 16 05 06 09 10 09 30 01 23 30 07 21 31 06 18 08 27 05 31 19 20 30 20 14 01 17 00 02 31 03 16 07 22 23 01 24 21 31 25 08 23 25 28 07 31 02 30 06 09 01 13 08 10 31 26 00 23 18 13 10 19 13 01 00 03 29 22 18 23 08 04 21 05 08 10 01 29 29 05 06 29 24 00 18 18 30 04 10 24 03 17 16 13 03 01 15 20 05 30 02 00 18 19 08 29 06 29 17 31 27 03 17 02 26 27 18 23 24 07 10 06 11 14 14 16 03 26 15 22 01 08 24 07 28 00 08 23 25 14 00 25 19 00 24 10 26 13 24 10 28 26 21 20 22 16 25 01 06 26 09 21 29 12 04 15 29 17 15 26 16 06 26 24 31 31 01 04 24 16 25 10 18 26 12 19 02 02 13 03 28 11 05 19 09 09 24 27 01 16 09 27 25 23 08 31 02 30 20 07 19 27 18 26 09 05 10 01 26 02 16 13 03 16 14 02 05 16 04 15 11 00 06 23 08 15 02 31 29 20 15 04 03 31 13 10 18 26 13 23 00 04 19 13 16 25 15 27 28 06 31 29 10 02 30 29 07 07 08 30 29 04 06 29 18 03 01 10 26 00 10 31 09 25 07 24 12 23 09 09 09 19 24 29 06 01 28 05 16 16 00 18 30 27 06 28 18 18 17 17 30 05 27 12 15 02 05 11 25 01 21 21 10 02 10 09 26 19 16 12 23 15 11 31 02 19 08 27 05 09 28 00 05 04 23 24 18 21 21 01 16 20 14 21 29 00 06 13 20 15 08 00 00 12 11 28 05 18 22 10 08 25 23 04 05 22 25 19 02 02 29 12 07 01 09 16 31 06 09 05 09 31 06 05 26 12 00 25 22 00 12 05 30 00 24 04 05 07 00 13 06 10 11 06 24 01 09 21 07 16 29 28 25 00 28 31 28 24 14 13 08 23 12 13 18 30 28 09 05 15 25 23 10 02 16 13 03 16 14 02 05 16 24 05 29 00 22 31 27 23 24 31 02 31 01 12 21 17 08 31 19 18 18 04 22 31 05 03 12 28 10 01 15 01 20 26 10 18 00 28 04 07 30 29 05 19 06 12 24 23 22 13 30 01 10 02 09 13 21 01 18 01 26 04 00 02 14 14 12 02 00 27 16 27 00 06 28 23 01 04 26 16 18 31 05 00 31 19 11 17 19 19 31 25 05 25 09 06 11 10 23 13 06 08 16 28 20 16 31 25 12 28 05 04 07 17 18 20 19 23 09 22 27 31 13 16 07 02 13 24 09 09 23 19 08 19 26 07 26 15 29 15 01 31 05 00 01 25 30 28 13 15 22 15 02 18 04 30 10 04 14 06 08 02 26 02 00 27 16 08 17 31 06 19 16 18 05 25 07 17 03 31 25 05 11 14 27 20 17 21 21 21 07 16 08 17 27 13 08 29 06 07 11 27 28 17 15 27 01 30 17 04 05 19 12 26 07 03 02 03 15 16 11 05 00 02 31 01 10 15 08 18 06 16 00 18 31 00 11 07 23 25 18 21 24 18 17 05 01 14 14 12 12 28 16 04 07 08 05 02 09 02 24 17 13 06 01 28 31 13 16 07 06 05 24 10 03 08 07 24 11 15 21 24 26 10 08 10 15 10 09 09 07 02 15 15 08 18 18 28 23 17 12 05 04 17 08 31 16 18 30 29 22 31 27 24 26 16 28 02 08 01 24 14 20 07 17 19 19 17 09 02 16 29 06 07 09 27 18 07 30 18 25 05 20 07 13 15 09 21 07 21 06 12 03 28 25 02 00 27 16 27 00 09 22 00 10 04 18 01 17 17 23 05 08 05 18 03 04 03 18 09 29 21 10 06 01 10 13 00 08 29 27 07 11 06 19 00 10 25 09 26 18 16 24 27 14 24 25 00 29 15 12 28 10 04 13 25 24 07 01 16 31 23 13 06 04 31 05 19 11 18 13 10 13 12 04 20 13 30 26 27 26 19 25 20 27 05 07 07 24 13 20 12 14 02 30 07 09 28 03 13 07 04 13 18 25 08 23 05 10 11 20 30 06 10 12 01 00 20 29 10 00 15 11 00 17 02 30 07 18 22 02 17 12 28 05 04 19 14 05 14 03 25 20 13 29 09 27 11 09 10 15 10 09 09 16 30 06 02 26 19 21 30 08 17 24 07 19 13 18 14 30 05 03 30 10 02 16 03 12 27 02 02 11 06 05 07 23 02 11 06 06 07 27 18 16 29 06 09 30 11 19 00 08 05 10 16 11 16 03 13 24 31 23 21 11 00 04 02 25 02 03 02 16 24 24 19 30 26 03 24 02 31 13 27 05 04 23 30 22 18 22 27 05 16 28 16 05 14 11 09 26 02 06 02 13 19 20 21 02 17 30 18 08 18 25 25 05 26 10 08 17 14 07 20 12 26 05 02 13 06 05 02 16 27 14 28 13 10 20 21 21 03 17 18 05 04 19 13 23 01 10 18 09 12 04 09 20 16 27 02 07 06 18 16 25 02 06 30 04 07 01 18 23 17 10 19 05 25 13 31 09 20 31 16 09 16 25 01 05 16 07 05 09 06 26 10 11 10 08 02 25 07 26 02 29 15 06 06 26 00 18 09 09 05 25 08 22 07 04 03 21 16 07 04 09 11 07 01 20 01 21 07 15 14 24 19 17 31 22 19 20 17 12 27 23 08 21 20 21 15 21 24 26 10 15 01 05 22 03 31 16 14 08 15 25 06 00 29 03 17 17 02 30 19 10 10 08 25 26 20 21 02 00 11 21 10 15 31 00 08 02 05 30 16 22 08 13 23 19 02 24 17 00 05 29 17 19 14 05 14 17 05 01 10 11 11 25 10 14 26 15 21 08 13 01 20 08 08 23 12 05 28 23 08 06 25 09 00 07 08 30 20 07 30 11 00 21 16 24 06 02 01 28 06 18 06 16 12 11 15 04 07 10 29 19 16 02 26 05 11 28 13 27 25 27 08 22 17 13 19 31 20 01 09 09 16 30 15 28 00 06 17 10 07 04 03 31 25 12 28 03 25 13 10 28 18 26 09 27 00 21 04 04 06 07 29 31 31 08 01 11 02 30 29 07 08 26 24 31 00 11 25 23 19 25 10 18 26 24 19 28 15 10 00 16 11 01 21 29 00 03 13 07 13 27 31 08 06 00 06 18 00 06 25 09 11 17 25 29 14 01 23 21 19 21 24 26 10 15 01 16 16 04 01 10 20 03 31 19 23 19 15 23 16 10 04 18 03 05 25 05 17 27 01 24 01 21 11 27 31 16 16 15 10 09 00 23 02 11 05 13 06 01 28 16 17 20 19 27 25 25 10 18 26 20 30 22 03 22 06 12 20 07 21 06 16 18 08 16 03 01 00 13 30 20 21 02 19 16 04 03 31 19 27 05 02 13 26 03 28 27 31 13 12 15 05 05 20 24 05 05 27 31 30 13 04 20 23 31 13 21 18 15 17 26 26 13 28 13 24 28 01 11 06 12 28 05 19 15 11 29 17 28 02 14 18 22 08 06 31 12 30 02 28 05 13 08 25 13 20 17 01 22 28 11 12 08 00 15 22 02 09 24 10 11 10 08 02 17 24 00 02 19 06 01 04 03 31 13 12 30 20 23 24 10 02 31 12 03 18 15 22 15 02 01 10 11 10 08 03 25 08 11 22 30 19 06 09 30 25 28 27 16 14 27 16 22 27 02 19 26 20 08 26 15 30 29 13 20 00 28 31 04 24 17 17 31 01 19 31 30 23 18 13 01 00 08 01 03 19 17 13 16 09 13 27 14 06 09 09 11 24 31 23 13 04 20 05 05 09 06 13 26 25 13 10 08 08 03 30 22 17 13 19 06 25 15 27 02 10 18 15 21 02 05 18 29 20 23 05 19 26 21 28 04 17 01 23 24 04 10 08 30 17 28 20 20 16 12 11 15 01 12 05 06 12 14 31 27 23 24 31 18 17 24 19 27 15 06 25 05 08 19 05 18 00 04 16 31 19 15 19 09 06 26 00 11 10 08 26 16 24 05 31 02 31 01 04 19 19 24 17 05 27 31 11 21 02 13 03 25 16 21 02 16 03 24 29 10 02 00 22 22 15 17 23 31 13 22 04 16 23 07 16 18 08 26 20 00 02 09 11 18 11 07 21 28 01 13 09 18 02 14 22 06 16 24 28 23 17 00 05 29 17 01 23 26 18 17 30 21 01 21 31 24 30 18 21 26 08 14 10 23 00 27 31 23 15 12 31 12 03 19 04 02 19 18 24 01 20 03 01 11 00 21 01 28 31 11 07 21 27 19 05 18 00 08 21 02 24 17 23 31 30 19 27 15 29 18 14 24 14 08 05 25 30 27 22 26 31 05 06 30 28 08 16 11 27 08 21 16 25 17 30 31 31 26 05 29 23 13 08 05 26 27 29 22 27 05 09 25 25 09 11 02 06 09 10 26 02 22 29 13 00 17 16 27 30 08 18 21 22 24 17 24 00 08 05 06 14 00 04 14 16 28 22 00 09 24 27 01 16 09 27 25 23 08 31 19 06 14 19 19 13 19 27 03 31 18 21 22 03 11 19 31 25 13 02 23 01 17 15 25 03 31 31 04 23 04 05 31 26 01 05 03 25 23 10 02 14 17 18 22 17 25 12 12 31 06 21 29 12 04 15 11 17 22 08 13 30 21 30 08 19 16 17 05 03 10 08 05 14 17 05 16 16 14 22 28 07 15 14 09 08 31 09 26 02 06 06 23 27 14 13 19 20 06 07 09 09 28 27 30 20 01 27 18 02 22 19 13 01 00 25 27 22 31 07 23 02 21 29 20 19 21 30 31 13 16 25 30 27 18 17 18 26 17 04 22 27 05 12 10 26 15 31 09 06 04 16 22 28 31 23 13 06 01 05 29 01 17 06 05 13 08 25 05 07 26 01 11 02 22 31 20 16 07 04 10 14 11 09 26 02 01 30 13 06 01 28 05 19 07 04 08 03 07 08 05 19 12 26 07 03 02 03 15 12 30 05 05 20 24 05 05 27 31 30 13 16 04 31 16 30 26 04 06 31 13 21 20 20 17 01 22 13 11 12 12 20 06 21 10 19 22 05 18 00 03 31 08 15 26 19 23 19 27 08 05 31 19 12 19 12 10 24 16 28 11 06 29 02 10 31 05 26 31 15 31 01 15 28 13 24 16 28 05 09 06 28 30 16 18 18 30 26 12 08 15 02 29 11 06 26 15 20 13 12 11 29 31 17 13 31 14 13 11 27 31 03 06 02 24 13 08 25 19 20 27 24 16 27 24 19 13 01 00 25 31 31 04 05 04 00 00 27 08 15 02 31 05 19 00 27 23 09 18 25 00 04 12 24 20 30 01 09 04 21 13 24 15 21 08 14 16 27 11 31 20 24 00 19 30 00 12 31 30 17 01 23 26 27 10 03 20 24 21 01 03 22 16 04 00 10 22 15 14 14 24 15 26 11 00 27 18 23 16 11 05 04 19 14 05 27 00 19 21 21 21 11 04 26 15 05 09 06 02 09 21 01 31 23 13 30 04 05 06 03 16 31 05 19 19 24 30 18 13 15 15 02 11 17 08 10 17 16 00 19 06 15 25 17 08 21 16 24 00 03 18 10 26 27 01 01 24 10 10 05 07 30 29 13 21 11 05 16 07 05 09 06 13 09 01 20 08 15 16 05 26 02 24 17 30 10 03 17 19 17 05 29 30 19 16 27 21 13 03 16 07 05 05 26 06 29 25 02 01 02 13 28 20 21 31 19 11 13 03 09 16 10 03 15 25 09 22 03 11 19 04 31 07 27 17 01 17 15 21 02 21 05 07 21 18 16 31 25 12 28 03 25 13 10 25 26 21 20 09 12 11 19 17 01 10 03 26 01 17 15 06 24 08 19 06 07 18 05 29 04 19 04 25 03 31 25 19 20 13 15 28 01 20 19 24 18 15 16 29 01 24 06 11 17 11 05 05 07 01 18 08 23 12 31 05 15 07 21 20 05 08 05 28 27 21 02 08 16 10 25 14 06 31 16 22 28 31 23 13 13 11 31 23 19 01 13 05 18 10 14 26 07 25 05 30 16 29 19 07 31 10 16 31 06 09 10 01 30 30 31 24 23 07 08 28 27 06 28 01 17 30 27 01 13 10 02 30 14 16 19 06 25 15 19 10 02 00 15 15 25 00 31 21 15 17 06 31 10 01"
FREQUENCIES = [0.062321425641578554, 0.012490536584451168, 0.01569462056098424, 0.038945910280960894, 0.09354190740267625, 0.01607432912294354, 0.020204245704253908, 0.05280527279247521, 0.048790206331757464, 0.0008695794844870301, 0.009398958848498628, 0.03420892877651807, 0.01733299268943824, 0.051150493503936544, 0.061266679636136065, 0.013003846307099847, 0.000986773485091751, 0.05073328286178374, 0.046202562798405226, 0.06807565107127037, 0.02286689339799317, 0.00681834695518267, 0.019683904341568945, 0.0009000499246442576, 0.020201901824241815, 0.0006211282032050216, 0.17688324899271757, 0.01438439163422346, 0.013264016988442328, 0.0011133430057448498, 0.0017696294091312877, 0.007469945598544919]

class Table():
    def __init__(self,):

        with open('table.txt') as f:
            lines = f.readlines()

        NUM_ELS = 32
        self.table = np.zeros((NUM_ELS, NUM_ELS), dtype=np.int32)
        for i, line in enumerate(lines):
            numbers = line[:-1].split(' ')
            for j, number in enumerate(numbers):
                self.table[i][j] = int(number)

        self.inverse_table =  np.zeros((NUM_ELS, NUM_ELS), dtype=np.int32)
        for i in range(NUM_ELS):
            for j in range(NUM_ELS):
                value = int(self.table[i][j])
                self.inverse_table[i][value] = j

    def encrypt(self, k, m):
        return self.table[k][m]

    def decrypt(self, k, c):
        return self.inverse_table[k][c]

ciphertext_list = CIPHERTEXT.split(' ')
letters = "abcdefghijklmnopqrstuvwxyz .,!?\n"

buckets = [[] for i in range(32)]
for i in range(len(ciphertext_list)):
    buckets[i%32].append(ciphertext_list[i])
bucket_frequencies = [[0 for j in range(32)] for i in range(32)]
for i in range(len(buckets)):
    for character in buckets[i]:
        num = int(character)
        bucket_frequencies[i][num] += 1/len(buckets[i])

def score(actual_frequencies, key_frequencies):
    differences = 0
    for i in range(32):
        differences += actual_frequencies[i]*key_frequencies[i]
    return differences

table = Table()

bestKeys = []
for bucket_freq in bucket_frequencies:
    scores = []
    for key in table.table:
        key_freq_list = []
        for code in key:
            key_freq_list.append(bucket_freq[code])
        scores.append(score(FREQUENCIES, key_freq_list))
    bestKey = scores.index(max(scores))
    bestKeys.append(bestKey)

print(bestKeys)
